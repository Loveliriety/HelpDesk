﻿@using ASI.Basecode.Services.Interfaces
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model IEnumerable<ASI.Basecode.Data.Models.User>
@inject ITeamService TeamService

@{
    ViewData["Title"] = "User Management";
    string theme = HttpContextAccessor.HttpContext.Session.GetString("Theme") ?? "light";
}
<!--Working-->

<div class="content p-4" style="margin-left: 80px; overflow: hidden;">
    <h5 class="mt-1 page-header">User Management</h5>

    <nav class="nav mt-3 nav-header">
        <a class="@(IsActive("Index", "UserManagement") ? "active2" : "") nav-link text-color" asp-action="Index" asp-controller="UserManagement">User List</a>
        <a class="@(IsActive("Index", "TeamManagement") ? "active2" : "") nav-link text-color" asp-action="Index" asp-controller="TeamManagement">Team List</a>
        <div style="width: 100%; border-bottom: 1px solid #3D729A; margin-bottom: 5px;"</div>

    </nav>

    <!-- Search bar and Add User button -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <input type="text" class="form-control w-25" id="searchInput" placeholder="Search..." />
        <button class="btn btn-sm assign-btn add-user-btn">+ Add User</button>
    </div>

    <!-- User Table -->
    <table class="table table-striped table-bordered" id="userTable">
        <thead>
            <tr>
                <th class="text-color" scope="col">Fullname</th>
                <th class="text-color" scope="col">Email</th>
                <th class="text-color" scope="col">Team</th>
                <th class="text-color" scope="col">Role</th>
                <th class="text-color" scope="col">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td class="text-color">@user.Name</td>
                    <td class="text-color">@user.Email</td>
                    <td class="text-color">@(user.TeamId.HasValue ? TeamService.GetTeamNameById(user.TeamId.Value) : "None")</td>
                    <td class="text-color">@user.Role</td>
                    <td>
                        <button class="btn btn-sm btn-primary edit-user-btn"
                                data-id="@user.UserId"
                                data-name="@user.Name"
                                data-email="@user.Email"
                                data-team="@user.TeamId"
                                data-role="@user.Role">
                            Edit
                        </button>
                        <a asp-action="Delete" data-bs-toggle="modal" data-bs-target="#deleteUserModal-@user.UserId" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Add User Drawer -->
<div class="custom-drawer" id="addUserDrawer">
    <img src="~/img/side-caret.svg" type="button" class="mt-4 ml-3 btn" onclick="toggleAddDrawer()" />
    <div class="custom-drawer-header d-flex justify-content-between">
        <h5>Add User</h5>
    </div>
    <div class="custom-drawer-body">
        <form asp-action="Create" asp-controller="UserManagement" method="post">
            <div class="mb-3">
                <label for="nameInput" class="form-label">Fullname</label>
                <input type="text" class="form-control" id="nameInput" name="Name" required />
            </div>
            <div class="mb-3">
                <label for="emailInput" class="form-label">Email</label>
                <input type="email" class="form-control" id="emailInput" name="Email" required />
            </div>
            <div class="mb-3">
                <label for="teamSelect" class="form-label">Team</label>
                <select for="teamSelect" class="form-select" id="teamSelect" name="TeamId" asp-items="ViewBag.Teams" required>
                    <option selected disabled value="">Select a team</option>
                </select>
            </div>
            <div class="mb-3">
                <label for="roleSelect" class="form-label">Role</label>
                <select class="form-select" id="roleSelect" name="Role" required>
                    <option selected disabled value="">Select a role</option>
                    <option value="Superadmin">Superadmin</option>
                    <option value="Admin">Admin</option>
                    <option value="Support Agent">Support Agent</option>
                    <option value="User">User</option>
                </select>
            </div>
            <div class="mb-3">
                <label for="passwordInput" class="form-label">Password</label>
                <div class="input-group">
                    <input type="password" class="form-control" id="passwordInput" name="Password" required />
                    <button type="button" class="btn btn-outline-secondary" id="toggleAddPassword">
                        <i class="fas fa-eye"></i>
                    </button>
                </div>
            </div>
            <div class="mt-2 d-flex justify-content-end">
                <button type="submit" class="btn save-btn">Add User</button>
            </div>
        </form>
    </div>
</div>

<!-- Edit User Drawer -->
<div class="custom-drawer" id="editUserDrawer">
    <img src="~/img/side-caret.svg" type="button" class="mt-4 ml-3 btn" onclick="toggleEditDrawer()" />
    <div class="custom-drawer-header d-flex justify-content-between">
        <h5>Edit User</h5>
    </div>
    <div class="custom-drawer-body">
        <form asp-action="Edit" asp-controller="UserManagement" method="post">
            <input type="hidden" id="editUserIdInput" name="UserId" />
            <div class="mb-3">
                <label for="editNameInput" class="form-label">Fullname</label>
                <input type="text" class="form-control" id="editNameInput" name="Name" required />
            </div>
            <div class="mb-3">
                <label for="editEmailInput" class="form-label">Email</label>
                <input type="email" class="form-control" id="editEmailInput" name="Email" required />
            </div>
            <div class="mb-3">
                <label for="teamSelect" class="form-label">Team</label>
                <select for="teamSelect" class="form-select" id="editTeamSelect" name="TeamId" asp-items="ViewBag.Teams" required>
                    <option selected disabled value="">Select a team</option>
                </select>
            </div>
            <div class="mb-3">
                <label for="editRoleSelect" class="form-label">Role</label>
                <select class="form-select" id="editRoleSelect" name="Role" required>
                    <option selected disabled value="">Select a role</option>
                    <option value="Superadmin">Superadmin</option>
                    <option value="Admin">Admin</option>
                    <option value="Support Agent">Support Agent</option>
                    <option value="User">User</option>
                </select>
            </div>
            <div class="mb-3">
                <label for="editPasswordInput" class="form-label">Password</label>
                <div class="input-group">
                    <input type="password" class="form-control" id="editPasswordInput" name="Password" value="" />
                    <button type="button" class="btn btn-outline-secondary" id="togglePassword">
                        <i class="fas fa-eye"></i>
                    </button>
                </div>
            </div>
            <div class="mt-2 d-flex justify-content-end">
                <button type="submit" class="btn save-btn">Save Changes</button>
            </div>
        </form>
    </div>
</div>

@foreach (var user in Model)
{
    <div class="modal fade" id="deleteUserModal-@user.UserId" tabindex="-1" aria-labelledby="deleteUserModalLabel-@user.UserId" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteUserModalLabel-@user.UserId">Delete User</h5>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this user <i style="font-weight: 600;">@user.Name</i>?</p>
                    <form asp-action="Delete" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="UserId" value="@user.UserId" />
                        <button type="submit" class="btn btn-danger">Delete</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Close">Cancel</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<!-- Drawer Backdrop -->
<div class="drawer-backdrop" id="drawerBackdrop"></div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function toggleAddDrawer() {
            const drawer = document.getElementById("addUserDrawer");
            const backdrop = document.getElementById("drawerBackdrop");
            drawer.classList.toggle("show");
            backdrop.classList.toggle("show");
        }

        function toggleEditDrawer() {
            const drawer = document.getElementById("editUserDrawer");
            const backdrop = document.getElementById("drawerBackdrop");
            drawer.classList.toggle("show");
            backdrop.classList.toggle("show");
        }

        document.querySelector('.add-user-btn').addEventListener('click', function () {
            toggleAddDrawer();
        });

        document.querySelectorAll('.edit-user-btn').forEach(button => {
            button.addEventListener('click', function () {
                document.getElementById("editUserIdInput").value = this.getAttribute("data-id");
                document.getElementById("editNameInput").value = this.getAttribute("data-name");
                document.getElementById("editEmailInput").value = this.getAttribute("data-email");
                document.getElementById("editTeamSelect").value = this.getAttribute("data-team");
                document.getElementById("editRoleSelect").value = this.getAttribute("data-role");

                document.getElementById("editPasswordInput").value = "";

                toggleEditDrawer();
            });
        });


        document.getElementById("drawerBackdrop").addEventListener('click', function () {
            const addDrawer = document.getElementById("addUserDrawer");
            const editDrawer = document.getElementById("editUserDrawer");
            if (addDrawer.classList.contains("show")) toggleAddDrawer();
            if (editDrawer.classList.contains("show")) toggleEditDrawer();
        });

        document.getElementById('togglePassword').addEventListener('click', function () {
            const passwordInput = document.getElementById('editPasswordInput');
            const icon = this.querySelector('i');

            if (passwordInput.type === 'text') {
                passwordInput.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            } else {
                passwordInput.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            }
        });

        document.getElementById('toggleAddPassword').addEventListener('click', function () {
            const passwordInput = document.getElementById('passwordInput');
            const icon = this.querySelector('i');

            if (passwordInput.type === 'text') {
                passwordInput.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            } else {
                passwordInput.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            }
        });

        document.getElementById('searchInput').addEventListener('keyup', function () {
            let filter = this.value.toLowerCase();
            let rows = document.querySelectorAll('#userTable tbody tr');

            rows.forEach(row => {
                let name = row.cells[0].textContent.toLowerCase();
                let email = row.cells[1].textContent.toLowerCase();
                let team = row.cells[2].textContent.toLowerCase();
                let role = row.cells[3].textContent.toLowerCase();

                if (name.includes(filter) || team.includes(filter) || email.includes(filter) || role.includes(filter)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });

        var successMessage = '@TempData["SuccessMessage"]';
        if (successMessage) {
            toastr.success(successMessage);
        }
    </script>
}

@functions {
    public bool IsActive(string action, string controller)
    {
        var currentAction = HttpContextAccessor.HttpContext?.Request.RouteValues["action"]?.ToString();
        var currentController = HttpContextAccessor.HttpContext?.Request.RouteValues["controller"]?.ToString();

        return string.Equals(currentAction, action, StringComparison.OrdinalIgnoreCase) &&
               string.Equals(currentController, controller, StringComparison.OrdinalIgnoreCase);
    }
}