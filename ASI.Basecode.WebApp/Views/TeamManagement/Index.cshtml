@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model IEnumerable<ASI.Basecode.Data.Models.Team>

@{
    ViewData["Title"] = "Team List";
    string theme = HttpContextAccessor.HttpContext.Session.GetString("Theme") ?? "light";
}

<div class="content p-4" style="margin-left: 80px;">
    <h5 class="mt-1 page-header">Team List</h5>

    <nav class="nav mt-3 nav-header">
        <a class="@(IsActive("Index", "UserManagement") ? "active2" : "") nav-link text-color" asp-action="Index" asp-controller="UserManagement">User List</a>
        <a class="@(IsActive("Index", "TeamManagement") ? "active2" : "") nav-link text-color" asp-action="Index" asp-controller="TeamManagement">Team List</a>
    </nav>
    <hr />

    <!-- Search bar and Add User button -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <input type="text" class="form-control w-25" id="searchInput" placeholder="Search..." />
        <button class="btn btn-sm assign-btn add-user-btn">+ Add Table</button>
    </div>

    <!-- Team Table -->
    <table class="table table-striped table-bordered" id="teamTable">
        <thead>
            <tr>
                <th class="text-color" scope="col">Team ID</th>
                <th class="text-color" scope="col">Name</th>
                <th class="text-color" scope="col">Company</th>
                <th class="text-color" scope="col">Tier</th>
                <th class="text-color" scope="col">Manager</th>
                <th class="text-color" scope="col">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var team in Model)
            {
                <tr>
                    <td class="text-color">@team.TeamId</td>
                    <td class="text-color">@team.TeamName</td>
                    <td class="text-color">@team.Company</td>
                    <td class="text-color">@team.Tier</td>
                    <td class="text-color">@team.Manager</td>
                    <td>
                        <button class="btn btn-sm btn-primary edit-team-btn"
                                data-id="@team.TeamId"
                                data-name="@team.TeamName"
                                data-company="@team.Company"
                                data-tier="@team.Tier"
                                data-manager="@team.Manager">
                            Edit
                        </button>
                        <a asp-action="Delete" data-bs-toggle="modal" data-bs-target="#deleteUserModal-@team.TeamId" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Add User Drawer -->
<div class="custom-drawer" id="addTeamDrawer">
    <img src="~/img/side-caret.svg" type="button" class="mt-4 ml-3 btn" onclick="toggleAddDrawer()" />
    <div class="custom-drawer-header d-flex justify-content-between">
        <h5>Add Team</h5>
    </div>
    <div class="custom-drawer-body">
        <form asp-action="Create" asp-controller="TeamManagement" method="post">
            <div class="mb-3">
                <label for="nameInput" class="form-label">Name</label>
                <input type="text" class="form-control" id="nameInput" name="TeamName" required />
            </div>
            <div class="mb-3">
                <label for="companySelect" class="form-label">Company</label>
                <select class="form-select" id="companySelect" name="Company" required>
                    <option selected disabled value="">Select a company</option>
                    <option value="Company A">Company A</option>
                    <option value="Company B">Company B</option>
                    <option value="Company C">Company C</option>
                    <option value="Company D">Company D</option>
                </select>
            </div>
            <div class="mb-3">
                <label for="tierSelect" class="form-label">Tier</label>
                <select class="form-select" id="tierSelect" name="Tier" required>
                    <option selected disabled value="">Select a tier</option>
                    <option value="Tier 1">Tier 1</option>
                    <option value="Tier 2">Tier 2</option>
                </select>
            </div>
            <div class="mb-3">
                <label for="managerInput" class="form-label">Manager</label>
                <input type="text" class="form-control" id="managerInput" name="Manager" required />
            </div>
            <div class="mt-2 d-flex justify-content-end">
                <button type="submit" class="btn save-btn">Add Team</button>
            </div>
        </form>
    </div>
</div>

<!-- Edit User Drawer -->
<div class="custom-drawer" id="editTableDrawer">
    <img src="~/img/side-caret.svg" type="button" class="mt-4 ml-3 btn" onclick="toggleEditDrawer()" />
    <div class="custom-drawer-header d-flex justify-content-between">
        <h5>Edit Table</h5>
    </div>
    <div class="custom-drawer-body">
        <form asp-action="Edit" asp-controller="TeamManagement" method="post">
            <input type="hidden" id="editTeamIdInput" name="TeamID" />
            <div class="mb-3">
                <label for="editNameInput" class="form-label">Name</label>
                <input type="text" class="form-control" id="editNameInput" name="TeamName" required />
            </div>
            <div class="mb-3">
                <label for="editCompanySelect" class="form-label">Company</label>
                <select class="form-select" id="editCompanySelect" name="Company" required>
                    <option selected disabled value="">Select a company</option>
                    <option value="Company A">Company A</option>
                    <option value="Company B">Company B</option>
                    <option value="Company C">Company C</option>
                    <option value="Company D">Company D</option>
                </select>
            </div>
            <div class="mb-3">
                <label for="editTierSelect" class="form-label">Tier</label>
                <select class="form-select" id="editTierSelect" name="Tier" required>
                    <option selected disabled value="">Select a tier</option>
                    <option value="Tier 1">Tier 1</option>
                    <option value="Tier 2">Tier 2</option>
                </select>
            </div>
            <div class="mb-3">
                <label for="editManagerInput" class="form-label">Manager</label>
                <input type="text" class="form-control" id="editManagerInput" name="Manager" required />
            </div>
            <div class="mt-2 d-flex justify-content-end">
                <button type="submit" class="btn save-btn">Save Changes</button>
            </div>
        </form>
    </div>
</div>

@foreach (var team in Model)
{
    <div class="modal fade" id="deleteUserModal-@team.TeamId" tabindex="-1" aria-labelledby="deleteUserModalLabel-@team.TeamId" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteUserModalLabel-@team.TeamId">Delete Team</h5>
                    <button type="button" class="btn" data-bs-dismiss="modal" aria-label="Close"><i class="bi bi-x-lg"></i></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this team?</p>
                    <p><strong>Team ID: </strong>@team.TeamId</p>
                    <p><strong>Name: </strong>@team.TeamName</p>
                    <p><strong>Company: </strong>@team.Company</p>
                    <p><strong>Manager: </strong>@team.Manager</p>
                    <form asp-action="Delete" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="TeamId" value="@team.TeamId" />
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<!-- Drawer Backdrop -->
<div class="drawer-backdrop" id="drawerBackdrop"></div>

@section Scripts {
    <script>
        function toggleAddDrawer() {
            const drawer = document.getElementById("addTeamDrawer");
            const backdrop = document.getElementById("drawerBackdrop");
            drawer.classList.toggle("show");
            backdrop.classList.toggle("show");
        }

        function toggleEditDrawer() {
            const drawer = document.getElementById("editTableDrawer");
            const backdrop = document.getElementById("drawerBackdrop");
            drawer.classList.toggle("show");
            backdrop.classList.toggle("show");
        }

        document.querySelector('.add-user-btn').addEventListener('click', function () {
            toggleAddDrawer();
        });

        document.querySelectorAll('.edit-team-btn').forEach(button => {
            button.addEventListener('click', function () {
                document.getElementById("editTeamIdInput").value = this.getAttribute("data-id");
                document.getElementById("editNameInput").value = this.getAttribute("data-name");
                document.getElementById("editCompanySelect").value = this.getAttribute("data-company");
                document.getElementById("editTierSelect").value = this.getAttribute("data-tier");
                document.getElementById("editManagerInput").value = this.getAttribute("data-manager");
                toggleEditDrawer();
            });
        });

        document.getElementById("drawerBackdrop").addEventListener('click', function () {
            const addDrawer = document.getElementById("addTeamDrawer");
            const editDrawer = document.getElementById("editTableDrawer");
            if (addDrawer.classList.contains("show")) toggleAddDrawer();
            if (editDrawer.classList.contains("show")) toggleEditDrawer();
        });

        document.getElementById('searchInput').addEventListener('keyup', function () {
            let filter = this.value.toLowerCase();
            let rows = document.querySelectorAll('#teamTable tbody tr');

            rows.forEach(row => {
                let name = row.cells[2].textContent.toLowerCase();
                let email = row.cells[3].textContent.toLowerCase();
                let role = row.cells[4].textContent.toLowerCase();

                if (name.includes(filter) || email.includes(filter) || role.includes(filter)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });
    </script>
}

@functions {
    public bool IsActive(string action, string controller)
    {
        var currentAction = HttpContextAccessor.HttpContext?.Request.RouteValues["action"]?.ToString();
        var currentController = HttpContextAccessor.HttpContext?.Request.RouteValues["controller"]?.ToString();

        return string.Equals(currentAction, action, StringComparison.OrdinalIgnoreCase) &&
               string.Equals(currentController, controller, StringComparison.OrdinalIgnoreCase);
    }
}